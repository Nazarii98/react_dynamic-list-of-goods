{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","map","name","id","color","style","getAll","fetch","then","response","json","get5First","a","sort","b","localeCompare","slice","getRedGoods","filter","good","App","useState","setGoods","errorMessage","setErrorMessage","handleGoodsLoad","callback","catch","error","message","visibleGoods","useMemo","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uOAOaA,EAA6BC,IAAMC,MAAK,gBACnDC,EADmD,EACnDA,MADmD,OAGnD,6BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,MAAb,OACT,oBAEE,UAAQ,OACRC,MAAO,CAAED,SAHX,SAKGF,GAJIC,W,uBCRN,SAASG,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACHN,IADG,cACjBN,EADiB,yBAGhBA,EACJa,MAAK,SAACD,EAAGE,GAAJ,OAAUF,EAAEV,KAAKa,cAAcD,EAAEZ,SACtCc,MAAM,EAAG,IALW,2CAAH,qDAQTC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAAAR,GAAK,OAAIA,EAAMkB,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKf,aCbhCgB,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOrB,EAAP,KAAcsB,EAAd,KACA,EAAwCD,mBAAwB,MAAhE,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,EAAkB,SAACC,GACvBA,IACGlB,KAAKc,GACLK,OAAM,SAAAC,GAAK,OAAIJ,EAAgBI,EAAMC,aAGpCC,EAAeC,mBAAQ,WAC3B,OAAO/B,IACN,CAACA,IAEJ,OACE,sBAAKgC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMT,EAAgBnB,IAHjC,4BAQA,wBACE2B,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMT,EAAgBd,IAHjC,gCAQA,wBACEsB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMT,EAAgBR,IAHjC,4BAQCa,GAAgB,cAACjC,EAAD,CAAWG,MAAO8B,IAElCP,GACC,mBAAGlB,MAAO,CAAED,MAAO,OAAnB,SACGmB,QClDXY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5a95d40d.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({\n  goods,\n}) => (\n  <ul>\n    {goods.map(({ name, id, color }) => (\n      <li\n        key={id}\n        data-cy=\"good\"\n        style={{ color }}\n      >\n        {name}\n      </li>\n    ))}\n  </ul>\n));\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = async () => {\n  const goods = await getAll();\n\n  return goods\n    .sort((a, b) => a.name.localeCompare(b.name))\n    .slice(0, 5);\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useMemo, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n\n  const handleGoodsLoad = (callback: () => Promise<Good[]>) => {\n    callback()\n      .then(setGoods)\n      .catch(error => setErrorMessage(error.message));\n  };\n\n  const visibleGoods = useMemo(() => {\n    return goods;\n  }, [goods]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handleGoodsLoad(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handleGoodsLoad(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => handleGoodsLoad(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      {visibleGoods && <GoodsList goods={visibleGoods} />}\n\n      {errorMessage && (\n        <p style={{ color: 'red' }}>\n          {errorMessage}\n        </p>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}